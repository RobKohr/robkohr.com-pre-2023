{"version":3,"sources":["pages/About.js","pages/Projects.js","pages/EmailList.js","App.js","serviceWorker.js","index.js"],"names":["About","react_default","a","createElement","id","href","projectList","name","url","image","description","Project","_ref","class","src","alt","Projects","map","p","i","Object","assign","EmailList","dist_default","action","fields","placeholder","type","required","Writing","App","props","console","log","BrowserRouter","to","NavLink","activeClassName","className","exact","Route","path","component","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.b44721d1.chunk.js","sourcesContent":["import React from \"react\";\n\nfunction About() {\n  return (\n    <div id=\"page-about\">\n      <h2>About</h2>\n      <h3>Programming</h3>\n      <p>\n        <h4>Skill Tests</h4>\n        <a href=\"http://robkohr.com/r/javascript.pdf\">\n          http://robkohr.com/r/javascript.pdf\n        </a>{\" \"}\n        - 96th percentile in JavaScript\n        <br />\n        <a href=\"http://robkohr.com/r/react_proficency_test.png\">\n          http://robkohr.com/r/react_proficency_test.png\n        </a>{\" \"}\n        - 92nd percentile in ReactJS\n      </p>\n      <p>\n        <h4>Community</h4>\n        Presenter at the <a href=\"http://nodepdx.org/\">nodepdx</a> conference\n        <br />\n        <a href=\"http://github.com/robkohr\">github</a>\n        <br />\n        <a href=\"http://stackexchange.com/users/35865/robkohr\">\n          Stack Exchange profile\n        </a>{\" \"}\n        - the top 13% of all contributors\n      </p>\n      <p>\n        <h4>Expert in </h4>JavaScript, Node.js, ReactJS, AngularJS, jQuery,\n        MongoDB/NoSQL, Websockets, HTML5, CSS3 (along with LESS/SCSS/SASS), AWS\n        services (mainly EC2 and S3), Responsive Design, OpenCV, Backbone.js,\n        PhoneGap/Cordova, Scrum, web sockets, git, PHP / MySQL / Apache, Server\n        administration (Debian, Red Hat, Ubuntu), NPM, Bower, Photoshop/Gimp,\n        Wireframing, eCommerce analytics, Bitcoin Blockchain\n      </p>\n      <p>\n        <h4>Education</h4>\n        B.S., Computer Science, 2001, Rutgers University, New Brunswick, NJ\n        <br />\n        Masters of Business Administration, 2006, Rutgers School of Business,\n        Newark, NJ\n        <br />\n        Certified Scrum Master, 2009\n      </p>\n    </div>\n  );\n}\n\nexport default About;\n","import React from \"react\";\nimport \"./Projects.scss\";\nconst projectList = [\n  {\n    name: \"Cueflash.com\",\n    url: \"https://cueflash.com\",\n    image: \"/images/projects/cueflash.png\",\n    description:\n      \"A flashcard based collaborative learning site which focuses on cards you don't know using an adaptive algorithm.\"\n  },\n  {\n    name: \"EditThis.info\",\n    url: \"https://editthis.info\",\n    image: \"/images/projects/editthis.png\",\n    description:\n      \"Shake-n-bake instant MediaWikis for groups, topics, or whatever\"\n  },\n\n  {\n    name: \"Mix-Match Domains\",\n    url: \"https://mixmatchdomains.com\",\n    image: \"/images/projects/mixmatch.png\",\n    description:\n      \"Generate domains using related words to terms you provide. Terms can be individual words or comma seperated lists of words to randomly select from.\"\n  },\n  {\n    name: \"ConstantSail.com\",\n    url: \"https://constantsail.com\",\n    image: \"/images/projects/constantsail.png\",\n    description: \"In-progress pirate, sailing, and trading game\"\n  },\n  {\n    name: \"Glicko\",\n    url: \"https://github.com/RobKohr/glicko\",\n    image:\n      \"https://upload.wikimedia.org/wikipedia/commons/thumb/1/1f/Elo_rating_graph.svg/600px-Elo_rating_graph.svg.png\",\n    description:\n      \"Javascript implementation of glicko-2 rating system along with a ffa-team based setup.\"\n  }\n];\nfunction Projects() {\n  return (\n    <div id=\"page-projects\">\n      <h2>Projects</h2>\n      <p>\n        These are personal, non-work-related projects. Contact my g-mail account\n        at RobKohr for my resume to see what I built for others.\n      </p>\n      <p>\n        Other little projects are at my{\" \"}\n        <a href=\"https://github.com/robkohr\">github page</a>\n      </p>\n      {projectList.map((p, i) => (\n        <Project id={i} {...p} />\n      ))}\n      <div id=\"projects-end\" />\n    </div>\n  );\n}\nfunction Project({ name, image, description, url }) {\n  return (\n    <div class=\"project\">\n      <a href={url}>\n        <img src={image} alt=\"project icon\" />\n        <h3 class=\"name\">{name}</h3>\n      </a>\n      <div class=\"description\">{description}</div>\n    </div>\n  );\n}\n\nexport default Projects;\n","import React from \"react\";\nimport Mailchimp from \"react-mailchimp-form\";\n\nconst EmailList = () => {\n  return (\n    <div>\n      <p>\n        I send out occasional updates of projects I am working on here. Figure\n        about once or twice a year.\n      </p>\n      <p>\n        When you sign up, be sure to click on the link in your email to confirm.\n      </p>\n      <Mailchimp\n        action=\"https://constantsail.us1.list-manage.com/subscribe/post?u=0383bd92ff7d130fcca724893&amp;id=0bebd5ea23\"\n        fields={[\n          {\n            name: \"EMAIL\",\n            placeholder: \"Email\",\n            type: \"email\",\n            required: true\n          }\n        ]}\n      />\n    </div>\n  );\n};\n\nexport default EmailList;\n","import React from \"react\";\nimport About from \"./pages/About\";\nimport Projects from \"./pages/Projects\";\nimport EmailList from \"./pages/EmailList\";\nimport { BrowserRouter as Router, Route, NavLink } from \"react-router-dom\";\nimport \"./App.scss\";\n\nfunction Writing() {\n  return (\n    <div id=\"page-writing\">\n      <h2>Writing</h2>\n      <p>\n        <a href=\"http://discretethought.tumblr.com/\">Tumbler</a>\n      </p>\n      <p>\n        <a href=\"http://twitter.com/rkohr\">Twitter</a>\n      </p>\n    </div>\n  );\n}\n\nfunction App(props) {\n  console.log(props);\n  return (\n    <Router>\n      <div id=\"router\">\n        <banner>\n          <div id=\"title\" to=\"/about\">\n            <h1>Rob Kohr's Website </h1>\n          </div>\n          <div id=\"summary\">\n            <quote>\n              My father says almost the whole world's asleep. Everybody you\n              know, everybody you see, everybody you talk to. He says only a few\n              people are awake. And they live in a state of constant total\n              amazement.\n            </quote>\n            <p> -Joe Vs. The Volcano</p>\n          </div>\n        </banner>\n\n        <div id=\"nav\">\n          <NavLink id=\"about-link\" activeClassName=\"selected\" to=\"/about\">\n            <div className=\"circle icon-about\">\n              <span>About</span>\n            </div>\n          </NavLink>\n          <NavLink id=\"projects-link\" exact activeClassName=\"selected\" to=\"/\">\n            <div className=\"circle icon-projects\">\n              <span>Projects</span>\n            </div>\n          </NavLink>\n          <NavLink id=\"writing-link\" activeClassName=\"selected\" to=\"/writing/\">\n            <div className=\"circle icon-writing\">\n              <span>Writing</span>\n            </div>\n          </NavLink>\n          <NavLink\n            id=\"mailing-list-link\"\n            activeClassName=\"selected\"\n            to=\"/email-list/\"\n          >\n            <div className=\"circle icon-email-list\">\n              <span> Mailing List</span>\n            </div>\n          </NavLink>\n        </div>\n        <div id=\"content\">\n          <Route path=\"/\" exact component={Projects} />\n          <Route path=\"/about\" exact component={About} />\n          <Route path=\"/projects/\" component={Projects} />\n          <Route path=\"/writing/\" component={Writing} />\n          <Route path=\"/email-list/\" component={EmailList} />\n        </div>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}